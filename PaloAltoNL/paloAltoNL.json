{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the vNet that will contain the appliance"
      }
    },
    "mgmtSubnet": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet for the management interface"
      }
    },
    "untrustSubnet": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet for the untrust interface"
      }
    },
    "trustSubnet": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet for the trust interface"
      }
    },
    "dmzSubnet": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet for the dmz interface"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the your storage account"
      }
    },
    "fwvmName": {
      "type": "string",
      "metadata": {
        "description": "Name of VM-Seris VM in the portal"
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "UserName for all VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for all VMs"
      }
    },
    "fwVmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D3_v2",
        "Standard_D4_v2"
      ],
      "metadata": {
        "description": "This is the size of PAN's firewall VM"
      }
    },
    "fromGatewayLogin": {
      "type": "string",
      "metadata": {
        "description": "This is the public IP address (run myipaddress in browser) from where you want to login"
      }
    },
    "IPAddressPrefix": {
      "type": "string",
      "defaultValue": "10.4",
      "metadata": {
        "description": "Default IP address prefix"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-05-01-preview",
    "location": "[resourceGroup().location]",
    "OSDiskName": "paVmSeries",
    "fwSku": "byol",
    "fwOffer": "vmseries1",
    "fwPublisher": "paloaltonetworks",
    "mgmtPublicIPName": "mgmtPublicIP",
    "natPublicIPName": "paNatPublicIP01",
    "nicName": "pa-eth",
    "FWPrivateIPAddressMgmt": "[concat(parameters('IPAddressPrefix'), '.19.20')]",
    "FWPrivateIPAddressUntrust": "[concat(parameters('IPAddressPrefix'), '.19.69')]",
    "FWPrivateIPAddressTrust": "[concat(parameters('IPAddressPrefix'), '.19.12')]",
    "FWPrivateIPAddressDMZ": "[concat(parameters('IPAddressPrefix'), '.19.28')]",
    "PrivateIPAddress0": "[variables('FWPrivateIPAddressMgmt')]",
    "PrivateIPAddress1": "[variables('FWPrivateIPAddressUntrust')]",
    "PrivateIPAddress2": "[variables('FWPrivateIPAddressTrust')]",
    "publicIPAddressType": "Static",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "nsgname-mgmt": "paMgmtNSG",
    "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('untrustSubnet'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('trustSubnet'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('mgmtSubnet'))]",
    "subnet3Ref": "[concat(variables('vnetID'),'/subnets/',parameters('dmzSubnet'))]",
    "routeTableTrust": "TrustRouteTable",
    "routeTableDMZ": "DMZRouteTable",
    "routeTableLAN": "LANRouteTable"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('mgmtPublicIPName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('natPublicIPName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTableTrust')]",
      "location": "[variables('location')]",
      "properties": {
        "routes": [
          {
            "name": "Trust-to-intranetwork",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('FWPrivateIPAddressTrust')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTableDMZ')]",
      "location": "[variables('location')]",
      "properties": {
        "routes": [
          {
            "name": "DMZ-to-Internet",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('FWPrivateIPAddressDMZ')]"
            }
          },
          {
            "name": "DMZ-to-LAN",
            "properties": {
              "addressPrefix": "10.4.18.0/24",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('FWPrivateIPAddressDMZ')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTableLAN')]",
      "location": "[variables('location')]",
      "properties": {
        "routes": [
          {
            "name": "LAN-to-Internet",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('FWPrivateIPAddressTrust')]"
            }
          },
          {
            "name": "LAN-to-DMZ",
            "properties": {
              "addressPrefix": "10.4.19.32/27",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('FWPrivateIPAddressTrust')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgname-mgmt')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow-Outside-From-IP",
            "properties": {
              "description": "Rule",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "[parameters('fromGatewayLogin')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow-Intra",
            "properties": {
              "description": "Allow intra network traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "[concat(parameters('IPAddressPrefix'), '.0.0/16')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "Default-Deny",
            "properties": {
              "description": "Default-Deny if we don't match Allow rule",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), '0')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('mgmtPublicIPName'))]"
      ],
      "tags": {
        "displayName": "[concat('NetworkInterfaces', '0')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', '0')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('FWPrivateIPAddressMgmt')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('mgmtPublicIPName'))]"
              },
              "subnet": {
                "id": "[variables(concat('subnet','2','Ref'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), '1')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('natpublicIPName'))]"
      ],
      "tags": {
        "displayName": "[concat('NetworkInterfaces', '1')]"
      },
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', '1')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('FWPrivateIPAddressUntrust')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('natPublicIPName'))]"
              },
              "subnet": {
                "id": "[variables(concat('subnet','0','Ref'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), '2')]",
      "location": "[variables('location')]",
      "dependsOn": [
      ],
      "tags": {
        "displayName": "[concat('NetworkInterfaces', '2')]"
      },
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', '2')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('FWPrivateIPAddressTrust')]",
              "subnet": {
                "id": "[variables(concat('subnet','1','Ref'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), '3')]",
      "location": "[variables('location')]",
      "dependsOn": [
      ],
      "tags": {
        "displayName": "[concat('NetworkInterfaces', '3')]"
      },
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', '3')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('FWPrivateIPAddressDMZ')]",
              "subnet": {
                "id": "[variables(concat('subnet','3','Ref'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('fwVmName')]",
      "location": "[variables('location')]",
      "plan": {
        "name": "[variables('fwSku')]",
        "product": "[variables('fwOffer')]",
        "publisher": "[variables('fwPublisher')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '0')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '1')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '2')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '3')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('fwVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('fwVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('fwPublisher')]",
            "offer": "[variables('fwOffer')]",
            "sku": "[variables('fwSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('fwVmName'),'-osDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat('http://', parameters('storageAccountName'), '.blob.core.windows.net/vhds/', parameters('fwVmName'), '-',variables('fwOffer'), '-', variables('fwSku'), '.vhd')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),'0'))]",
              "properties": { "primary": true }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),'1'))]",
              "properties": { "primary": false }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),'2'))]",
              "properties": { "primary": false }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),'3'))]",
              "properties": { "primary": false }
            }
          ]
        }
      }
    }
  ]
}
